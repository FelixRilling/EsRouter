{"version":3,"file":"avenue.js","sources":["../node_modules/lightdash/dist/esm/src/for/eachEntry.js","../node_modules/lightdash/dist/esm/src/str/lib/Delimiters.js","esm/src/location/getLocationHash.js","esm/src/path/splitPath.js","esm/src/path/isPathVariable.js","esm/src/route/lookup/routesMatch.js","esm/src/route/lookup/findRoute.js","esm/src/Avenue.js"],"sourcesContent":["/**\n * Iterates over each entry of an object.\n *\n * @memberof For\n * @param {object} obj Object to iterate.\n * @param {function} fn Function to use (`fn(key: *, val: *, index: number, obj: object) => void`).\n * @example\n * const a = {a: 1, b: 2};\n *\n * forEachEntry(a, (key, val, index) => {\n *     a[key] = val * index;\n * })\n * // a = {a: 0, b: 2}\n */\nconst forEachEntry = (obj, fn) => {\n    for (const [key, val] of Object.entries(obj)) {\n        fn(val, key, obj);\n    }\n};\nexport { forEachEntry };\n//# sourceMappingURL=eachEntry.js.map","var Delimiters;\n(function (Delimiters) {\n    Delimiters[\"KEBAB\"] = \"-\";\n    Delimiters[\"SNAKE\"] = \"_\";\n})(Delimiters || (Delimiters = {}));\nexport { Delimiters };\n//# sourceMappingURL=Delimiters.js.map","/**\n * Returns hash without init-character.\n *\n * @private\n * @returns current location hash, without the hash.\n */\nconst getLocationHash = () => location.hash.replace(\"#\", \"\");\nexport { getLocationHash };\n//# sourceMappingURL=getLocationHash.js.map","/**\n * Splits path by slashes and trims.\n *\n * @private\n * @param path Path string.\n * @returns trimmed path string array.\n */\nconst splitPath = (path) => path.split(\"/\").filter(item => item.length);\nexport { splitPath };\n//# sourceMappingURL=splitPath.js.map","/**\n * Checks if the pathPart is a path variable.\n *\n * @private\n * @param pathPart path string.\n * @returns if the pathPart is a path variable.\n */\nconst isPathVariable = (pathPart) => pathPart.startsWith(\":\");\nexport { isPathVariable };\n//# sourceMappingURL=isPathVariable.js.map","import { isPathVariable } from \"../../path/isPathVariable\";\n/**\n * Checks if two routes match.\n *\n * @private\n * @param currentPath first route.\n * @param routePath second route.\n * @returns if the first and second route match.\n */\nconst routesMatch = (currentPath, routePath) => currentPath.every((currentPathPart, index) => {\n    const routePathPart = routePath[index];\n    if (routePathPart) {\n        // Checks for variable-wildcard or equivalency\n        return (isPathVariable(routePathPart) ||\n            currentPathPart === routePathPart);\n    }\n    return false;\n});\nexport { routesMatch };\n//# sourceMappingURL=routesMatch.js.map","import { isPathVariable } from \"../../path/isPathVariable\";\nimport { routesMatch } from \"./routesMatch\";\n/**\n * Finds route by path.\n *\n * @private\n * @param path path string array.\n * @param routes object containing routes.\n * @returns object containing route and args, or null if none was found.\n */\nconst findRoute = (path, routes) => {\n    const route = routes.find((routeCurrent) => routesMatch(path, routeCurrent[0]));\n    if (route) {\n        const args = {};\n        route[0].forEach((routePathPart, index) => {\n            if (isPathVariable(routePathPart)) {\n                args[routePathPart.substr(1)] = path[index];\n            }\n        });\n        return {\n            route,\n            args\n        };\n    }\n    return null;\n};\nexport { findRoute };\n//# sourceMappingURL=findRoute.js.map","import { forEachEntry } from \"lightdash\";\nimport { getLocationHash } from \"./location/getLocationHash\";\nimport { splitPath } from \"./path/splitPath\";\nimport { findRoute } from \"./route/lookup/findRoute\";\n/**\n * Avenue class.\n *\n * @class\n */\nclass Avenue {\n    /**\n     * Avenue constructor.\n     *\n     * @constructor\n     * @param {object} routes object of routes to use.\n     */\n    constructor(routes) {\n        this.view = null;\n        this.routes = [];\n        this.fallback = () => null;\n        // Change routes from {string: fn} to [string[], fn] and extract fallback route\n        forEachEntry(routes, (routeItemFn, routeItemPath) => {\n            if (routeItemPath === \"?\") {\n                this.fallback = routeItemFn;\n            }\n            else {\n                this.routes.push([splitPath(routeItemPath), routeItemFn]);\n            }\n        });\n        window.addEventListener(\"hashchange\", e => this.setView(getLocationHash(), e), false);\n        // Load current route if it exists\n        this.setView(getLocationHash());\n    }\n    /**\n     * Sets view to a route path.\n     *\n     * @param {string} path string route path.\n     * @param {Event|null} [e=null] event, if called through one.\n     */\n    setView(path, e = null) {\n        const result = findRoute(splitPath(path), this.routes);\n        if (result) {\n            this.view = path;\n            result.route[1](result.args, path, e);\n        }\n        else {\n            this.fallback({}, path, e);\n        }\n    }\n    /**\n     * Returns active view path.\n     *\n     * @returns {string|null} active view, or null if none was set.\n     */\n    getView() {\n        return this.view;\n    }\n}\nexport { Avenue };\n//# sourceMappingURL=Avenue.js.map"],"names":[],"mappings":"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"}