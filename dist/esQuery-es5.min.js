"use strict";

function _classCallCheck(a, b) {
  if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
}
var _createClass = function() {
  function a(a, b) {
    for (var c = 0; c < b.length; c++) {
      var d = b[c];
      d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
    }
  }
  return function(b, c, d) {
    return c && a(b.prototype, c), d && a(b, d), b
  }
}();
! function(a) {
  function b(a, b) {
    return this instanceof e ? void 0 : new e(a, b)
  }
  var c = document,
    d = c.getElementById,
    e = function() {
      function a(b, e) {
        if (_classCallCheck(this, a), "string" == typeof b) {
          var f = /^<.+>$/,
            g = [];
          if (b.search(f) > -1) {
            var h = c.createElement("div");
            h.innerHTML = b, g = [h.firstChild]
          } else {
            var i = /^#\w+$/,
              j = /^\.\w+$/,
              k = /^\w+$/;
            e = e ? d(e.replace("#", "")) || c : c, b.search(i) > -1 ? g.push(e.getElementById(b.replace("#", ""))) : g = b.search(j) > -1 ? e.getElementsByClassName(b.replace(".", "")) : b.search(k) > -1 ? e.getElementsByTagName(b) : e.querySelectorAll(b)
          }
          if (g.length) {
            this.length = g.length;
            for (var l = 0; l < g.length; l++) this[l] = g[l]
          }
        }
      }
      return _createClass(a, [{
        key: "each",
        value: function(a) {
          for (var b = 0; b < this.length; b++) a(this[b], b);
          return this
        }
      }, {
        key: "on",
        value: function(a, b, c) {
          return this.each(function(d) {
            d.addEventListener(a, b, c || !1)
          })
        }
      }, {
        key: "ready",
        value: function(a, b) {
          return this.on("DOMContentLoaded", a, b)
        }
      }, {
        key: "load",
        value: function(a, b) {
          return this.on("load", a, b)
        }
      }, {
        key: "click",
        value: function(a, b) {
          return this.on("click", a, b)
        }
      }, {
        key: "change",
        value: function(a, b) {
          return this.on("change", a, b)
        }
      }, {
        key: "select",
        value: function(a, b) {
          return this.on("select", a, b)
        }
      }, {
        key: "focus",
        value: function(a, b) {
          return this.on("focus", a, b)
        }
      }, {
        key: "blur",
        value: function(a, b) {
          return this.on("blur", a, b)
        }
      }, {
        key: "append",
        value: function(a) {
          return this.each(function(b) {
            b.innerHTML += a
          })
        }
      }, {
        key: "prepend",
        value: function(a) {
          return this.each(function(b) {
            b.innerHTML = a + b.innerHTML
          })
        }
      }, {
        key: "remove",
        value: function() {
          return this.each(function(a) {
            a.parentNode.removeChild(a)
          })
        }
      }, {
        key: "empty",
        value: function() {
          return this.each(function(a) {
            a.parentNode.removeChild(a)
          })
        }
      }, {
        key: "html",
        value: function(a) {
          return a ? this.each(function(b) {
            b.innerHTML = a
          }) : this[0].innerHTML
        }
      }, {
        key: "text",
        value: function(a) {
          return a ? this.each(function(b) {
            b.textContent = a
          }) : this[0].textContent
        }
      }, {
        key: "val",
        value: function(a) {
          return a ? this.each(function(b) {
            b.value = a
          }) : this[0].value
        }
      }, {
        key: "attr",
        value: function(a, b) {
          return b ? this.each(function(c) {
            c.setAttribute(a, b)
          }) : this[0].getAttribute(a)
        }
      }, {
        key: "css",
        value: function(a, b) {
          return b ? this.each(function(c) {
            c.style[a] = b
          }) : this[0].style[a]
        }
      }, {
        key: "height",
        value: function(a) {
          return a ? this.each(function(b) {
            b.style.height = a
          }) : this[0].offsetHeight
        }
      }, {
        key: "width",
        value: function(a) {
          return a ? this.each(function(b) {
            b.style.width = a
          }) : this[0].offsetWidth
        }
      }, {
        key: "addClass",
        value: function(a) {
          return this.each(function(b) {
            b.className ? b.className += " " + a : b.className = a
          })
        }
      }, {
        key: "removeClass",
        value: function(a) {
          return this.each(function(b) {
            b.className = b.className.replace(a, "")
          })
        }
      }, {
        key: "hasClass",
        value: function(a) {
          return this[0].className && this[0].className.indexOf(a) > -1
        }
      }]), a
    }();
  a.esQuery = e, a.$ = b
}(window);
